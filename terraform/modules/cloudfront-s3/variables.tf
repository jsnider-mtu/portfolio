variable "tags_context" {
  type = object({
    enabled             = bool
    name                = string
    namespace           = string
    environment         = string
    stage               = string
    attributes          = list(string)
    tags                = map(string)
    delimiter           = string
    label_order         = list(string)
    regex_replace_chars = string
    additional_tag_map  = map(string)
  })
  description = "Context map generated by terraform-null-label module"
}

variable "realtime_log_config_arn" {
  default = null
}

variable "certificate_arn" {
  description = "Existing certificate arn."
}

variable "domains" {
  type    = list(string)
  default = []
}

variable "aws_lb" {
  # default     = ""
  default     = null
  description = "The existing LB to put cloudfront"
}

variable "allowed_methods" {
  type = list(string)
}

variable "cached_methods" {
  type = list(string)
}

variable "compress" {
  description = "Whether you want CloudFront to automatically compress content for web requests that include Accept-Encoding: gzip in the request header"
}

variable "forward_cookies" {
  description = "The forwarded values cookies that specifies how CloudFront handles cookies"
}

variable "forward_query_string" {
  description = "Indicates whether you want CloudFront to forward query strings to the origin that is associated with this cache behavior."
}

variable "forward_headers" {
  type        = list(string)
  description = "Specifies the Headers, if any, that you want CloudFront to vary upon for this cache behavior. "
}

variable "ssl_support_method" {
  description = "Specifies how you want CloudFront to serve HTTPS requests. NOTE: vip causes CloudFront to use a dedicated IP address and may incur extra charges."
}

variable "acm_certificate_arn" {
  description = "The ARN of the AWS Certificate Manager certificate that you wish to use with this distribution."
}

variable "price_class" {
  description = "The price class for this distribution."
}

variable "minimum_protocol_version" {
  description = "The minimum version of the SSL protocol that you want CloudFront to use for HTTPS connections."
}

variable "custom_header" {
  default     = ""
  description = "Add header so nginx can filter out traffic that isn't coming directly from cloudfront."
}

variable "web_acl_id" {
  default     = ""
  description = "If you're using AWS WAF to filter CloudFront requests, the Id of the AWS WAF web ACL that is associated with the distribution."
}

variable "s3_path_pattern" {
  default     = ""
  description = "An ordered list of cache behaviors resource for this distribution"
}

variable "s3_allowed_methods" {
  default = [""]
  type    = list(string)
}

variable "s3_cached_methods" {
  default = [""]
  type    = list(string)
}

variable "s3_forward_headers" {
  default     = [""]
  type        = list(string)
  description = "Specifies the Headers, if any, that you want CloudFront to vary upon for this cache behavior. "
}

variable "s3_bucket_name" {
  default     = ""
  description = "Name of s3 bucket."
}

variable "s3_forward_query_string" {
  type        = bool
  default     = false
  description = "Specifies the Headers, if any, that you want CloudFront to vary upon for this cache behavior. "
}

variable "cors_allowed_headers" {
  type        = list(string)
  default     = ["*"]
  description = "List of allowed headers for S3 bucket"
}

variable "cors_allowed_methods" {
  type        = list(string)
  default     = ["GET"]
  description = "List of allowed methods (e.g. GET, PUT, POST, DELETE, HEAD) for S3 bucket"
}

variable "cors_allowed_origins" {
  type        = list(string)
  default     = []
  description = "List of allowed origins (e.g. example.com, test.com) for S3 bucket"
}

variable "cors_expose_headers" {
  type        = list(string)
  default     = ["ETag"]
  description = "List of expose header in the response for S3 bucket"
}

variable "cors_max_age_seconds" {
  default     = "3600"
  description = "Time in seconds that browser can cache the response for S3 bucket"
}

variable "keepalive_timeout" {
  default     = 5
  description = "The Custom KeepAlive timeout, in seconds."
}

variable "origin_timeout" {
  default     = 30
  description = "The Custom Read timeout, in seconds."
}

variable "s3_acl" {
  default     = "private"
  description = "The canned ACL to apply."
}

variable "s3_origin_id_path_override" {
  default = null

}

variable "wait_for_deployment" {
}

variable "custom_error_response" {
  type = list(object({
    error_caching_min_ttl = string
    error_code            = string
    response_code         = string
    response_page_path    = string
  }))

  description = "List of one or more custom error response element maps"
  default     = []
}

variable "index_document" {
  default     = ""
  description = "Index document for S3 website"
}

variable "enable_s3" {
  type = bool
}

variable "enable" {
  type = bool
}

variable "create_bucket" {
  default = false
  type    = bool
}

variable "s3_origin_access_identity" {
  type        = string
  default     = ""
  description = "Use if the bucket you are trying to set as an origin already has an access ID used by Cloudfront"
}

variable "stage" {
}

variable "redirect_all_requests_to" {
  default     = ""
  description = "A hostname to redirect all website requests for this bucket to. Hostname can optionally be prefixed with a protocol (http:// or https://) to use when redirecting requests. The default is the protocol that is used in the original request."
}

# variable "default_cache_policy_id" {
#   type        = string
#   default     = "4135ea2d-6df8-44a3-9df3-4b5a84be39ad"
#   description = "Change this if you need a custom cache policy id"
# }

# variable "default_origin_request_policy_id" {
#   type        = string
#   default     = "216adef6-5c7f-47e4-b989-5492eafa07d3"
#   description = "Change this if you need a custom origin request policy id"
# }

variable "dynamic_custom_origin_config" {
  description = "Configuration for the custom origin config to be used in dynamic block"
  type        = any
  default     = []
}

variable "dynamic_ordered_cache_behavior" {
  description = "Ordered Cache Behaviors to be used in dynamic block"
  type        = any
  default     = []
}

variable "http_version" {
  default     = "http2"
  description = "The maximum HTTP version to support on the distribution."
}

variable "domain_name" {
  default = null
}

variable "origin_id" {
  default = null
}

variable "origin_path" {
  default = null
}

variable "is_ipv6_enabled" {
  default = false
}
